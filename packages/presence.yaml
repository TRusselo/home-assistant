###############################################################################
#   @author         :   Jeffrey Stone 
#   @date           :   02/19/2019
#   @package        :   Presence
#   @description    :   A Collection of Presence Related Trackers and Sensors 
###############################################################################

input_datetime:
  last_time_home_tristyn:
    name: Tristyn Last Seen
    has_date: true
    has_time: true
  last_time_home_terry:
    name: Terry Last Seen
    has_date: true
    has_time: true


sensor:
  - platform: template
    sensors:
      tristyn_location:
        friendly_name: "Tristyn's Current Location"
        unit_of_measurement: ''
        value_template: >-
            {% set person = states.person.tristyn.state %}
            {%- if person in ['SaveOn','Independant','Sobeys'] %}
              Grocery Store
            {% elif person in ['HomeHardware','CanadianTire','Rona'] %}
              Hardware Store
            {% elif person in ['Walmart','Target'] %}
              Department Store
            {% else %}
              {% if person in ['not_home'] %}
                {{ states.sensor.note_10_geocoded_location }} 
              {% else %}
                {{ states.person.tristyn.state }}
              {%- endif %}
            {%- endif %}
  - platform: template
    sensors:
      terry_location:
        friendly_name: "Terry's Current Location"
        unit_of_measurement: ''
        value_template: >-
            {% set person = states.person.terry.state %}
            {%- if person in ['SaveOn','Independant','Sobeys'] %}
              Grocery Store
            {% elif person in ['HomeHardware','CanadianTire','Rona'] %}
              Hardware Store
            {% elif person in ['Walmart','Target'] %}
              Department Store
            {% else %}
              {%- if person in ['McMurrayCoin'] %}
                McMurray Coin
              {% elif person in ['not_home'] %}
                {{ states.sensor.pixel_4_xl_geocoded_location }} 
              {% else %}
                {{ states.person.terry.state }}
              {%- endif %}
            {%- endif %}

  - platform: mqtt
    name: "Family Status"
    state_topic: "house/family/status"
    payload_available: "online"
    payload_not_available: "offline"

  - platform: mqtt
    name: "Family Arrived"
    state_topic: "house/family/arrived"
    payload_available: "online"
    payload_not_available: "offline"

  - platform: template
    sensors:
      tristyn_home:
        value_template: >-
          {{ is_state('device_tracker.note_10', 'home') or is_state('device_tracker.s9', 'home')
             or is_state('device_tracker.fordpass_tracker', 'home') }}

  - platform: template
    sensors:
      terry_home:
        value_template: >-
          {{ is_state('device_tracker.pixel_4_xl', 'home') }}

automation:

  - id: terry_arrives_work
    alias: Terry Arrives at McMurray Coin
    initial_state: true
    trigger:
    - platform: zone
      event: enter
      zone: zone.mcmurray_coin
      entity_id: person.terry
    action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.terry_travel_monitor
    - service: script.status_annc
      data:
        who: '{{ states.sensor.room_presence.state }}'
        speech_message: 'Terry has arrived at work.'
  
  - id: terry_leaves_work
    alias: Terry Leaves McMurray Coin Notification
    initial_state: true
    trigger:
    - platform: zone
      event: leave
      zone: zone.mcmurray_coin
      entity_id: person.terry
    action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.terry_travel_monitor
    - service: script.status_annc
      data_template:
        who: '{{ states.sensor.room_presence.state }}'
        call_interpruption: 1 
        call_terry_location: 1
        
  
  - id: welcome_home
    alias: Welcome Home
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - person.tristyn
          - person.terry
        from: 'not_home'
        to: 'home'
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: input_boolean.welcome_home
          state: "on"
        sequence:
        - service: script.turn_on 
          entity_id: script.welcome_briefing
      default: 
      - service: group.set
        data:
          object_id: "arriving"
          add_entities: >-
            {{ trigger.to_state.entity_id }}
      - wait_template: "{{ is_state('binary_sensor.front_door_contact', 'on') }}"
        timeout: '00:3:00'   
      - service: script.status_annc
        data_template:
          who: '{{ states.sensor.room_presence.state }}'
          call_interuption: 1
          speech_message: >
            {% set person = expand('group.arriving')|map(attribute='name')|join(' and ') %}
            {% set peoplecount = expand('group.arriving') | count %}
            {% if peoplecount == 1 %}
              {% set is_are = ' is ' %}
              {% set has_have = ' has ' %}
            {% else %}
              {% set is_are = ' are ' %}
              {% set has_have = ' have ' %}
            {% endif %}
            {%- macro greeting_sentence(person, is_are, has_have) -%}
            {{ [
              person ~ has_have + " arrived.",
              "My sensors are picking up the presence of additional humans. " ~ person ~ has_have + " been identified as home.",
              "Guess who is home?" ~ person ~ is_are,
              "I am sensing a disturbance in the force. "  ~ person +" must be home!",
              person ~ is_are + "now in the house.",
              person  ~ is_are + " now here.  Hash tag Welcome Home.",
              person  ~ is_are + " now here.  Hash tag Home.",
              "I know a secret! "  ~ person ~ is_are +" home!",
              "Just a quick announcement. " ~ person ~ has_have +" arrived!",
              "Hey" ~ person + "! High Five! Glad you are finally home.",
              "Just a quick announcement. " ~ person ~ has_have + "  arrived!",
              person ~ has_have + " finally made it home."
              ] | random }}
            {%- endmacro -%}
            {{greeting_sentence(person, is_are, has_have)}}
      - delay: 00:02:00  
      - service: group.set
        data:
          object_id: "arriving"
          entities: []     
          

script:
  family_is_home:
    sequence:
    - condition: state
      entity_id: sensor.family_status
      state: Away
    - service: script.standby
    - service: mqtt.publish
      data:
        topic: house/family/status
        payload_template: Home
        retain: true
    - service: script.turn_on
      entity_id: script.welcome_briefing 

  family_is_away:
    sequence:
    - condition: state
      entity_id: sensor.family_status
      state: Home
    - service: scene.turn_on
      entity_id: scene.lights_out
    - service: input_boolean.turn_on
      entity_id: input_boolean.sentry_mode
    # - service: scene.turn_on
    #   entity_id: scene.all_fans_off
    - service: mqtt.publish
      data:
        topic: house/family/status
        payload_template: Away
        retain: true
    - service: input_boolean.turn_on
      entity_id: input_boolean.welcome_home
