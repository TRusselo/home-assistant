message_temperature:
  sequence:
  - service: tts.google_translate_say
    entity_id: media_player.whole_home_group
    data_template:
      message: Current temperature feels like {{ states('sensor.openweathermap_feels_like_temperature') }}
  mode: single
restart_hass:
  alias: Restart Home Assistant
  sequence:
  - service: shell_command.restart_hass
  mode: single
refresh_van_status:
  alias: Refresh Van Status
  sequence:
  - service: fordpass.refresh_status
  mode: single
weather_alert_tts:
  sequence:
  - service: tts.google_translate_say
    entity_id: media_player.whole_home_group
    data_template:
      message: '{{ states(''sensor.canada_weather_alerts'') }} in effect.'
  mode: single
date_notification:
  alias: Date Notification
  sequence:
  - service: notify.notify
    data: {}
  mode: single
improved_randomize_vacation_lights:
  alias: improved_randomize vacation lights
  sequence:
  - repeat:
      until:
      - condition: state
        entity_id: sun.sun
        state: above_horizon
      sequence:
      - service: notify.mobile_app_note_10
        data:
          message: Running Vacation Lights
      - service: homeassistant.turn_on
        data:
          entity_id: '{{ expand(''group.vacation_lights'') | selectattr(''state'',
            ''eq'', ''off'') | map(attribute=''entity_id'') | list | random }}'
      - delay:
          minutes: '{{ range(1,3) | random | int }}'
      - service: '{% set service = [''homeassistant.turn_on'', ''homeassisant.turn_off''
          ] | random %} {{ service }}

          '
        data:
          entity_id: "{% if service == 'homeassistant.turn_on'  %}\n  {{ expand('group.vacation_lights')\
            \ | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list\
            \ | random }}\n{% else %}\n  {{ expand('group.vacation_lights') | selectattr('state',\
            \ 'eq', 'on') | map(attribute='entity_id') | list | random }}\n{% endif\
            \ %}\n"
      - delay:
          minutes: '{{ range(1,3) | random | int }}'
  mode: single
randomize_vacation_lights_demo:
  alias: demo - randomize vacation lights
  sequence:
  - repeat:
      count: '8'
      sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: '{{ expand(''group.vacation_lights'') | selectattr(''state'',
            ''eq'', ''off'') | map(attribute=''entity_id'') | list | random }}'
      - delay:
          seconds: '{{ range(2,5) | random | int }}'
      - service: '{% set service = [''homeassistant.turn_on'', ''homeassisant.turn_off''
          ] | random %} {{ service }}

          '
        data:
          entity_id: "{% if service == 'homeassistant.turn_on'  %}\n  {{ expand('group.vacation_lights')\
            \ | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list\
            \ | random }}\n{% else %}\n  {{ expand('group.vacation_lights') | selectattr('state',\
            \ 'eq', 'on') | map(attribute='entity_id') | list | random }}\n{% endif\
            \ %}\n"
  mode: single
